apiVersion: v1
kind: Namespace
metadata:
  name: rook-cassandra-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusters.cassandra.rook.io
spec:
  group: cassandra.rook.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        spec:
          type: object
          properties:
            version:
              type: string
              description: "Version of Cassandra"
            datacenter:
              type: object
              properties:
                name:
                  type: string
                  description: "Datacenter Name"
                racks:
                  type: array
                  properties:
                    name:
                      type: string
                    members:
                      type: integer
                    configMapName:
                      type: string
                    storage:
                      type: object
                      properties:
                        volumeClaimTemplates:
                          type: object
                      required:
                        - "volumeClaimTemplates"
                    placement:
                      type: object
                    resources:
                      type: object
                      properties:
                        cassandra:
                          type: object
                        sidecar:
                          type: object
                      required:
                        - "cassandra"
                        - "sidecar"
                    sidecarImage:
                      type: object
                  required:
                    - "name"
                    - "members"
                    - "storage"
                    - "resources"
              required:
                - "name"
          required:
            - "version"
            - "datacenter"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-cassandra-operator
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "delete"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["*"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["create"]
  - apiGroups: ["cassandra.rook.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create","update","patch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-cassandra-operator
  namespace: rook-cassandra-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-cassandra-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-cassandra-operator
subjects:
  - kind: ServiceAccount
    name: rook-cassandra-operator
    namespace: rook-cassandra-system
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rook-cassandra-operator
  namespace: rook-cassandra-system
  labels:
    app: rook-cassandra-operator
spec:
  replicas: 1
  serviceName: "non-existent-service"
  selector:
    matchLabels:
      app: rook-cassandra-operator
  template:
    metadata:
      labels:
        app: rook-cassandra-operator
    spec:
      serviceAccountName: rook-cassandra-operator
      containers:
        - name: rook-cassandra-operator
          image: rook/cassandra:v1.1.2
          imagePullPolicy: "Always"
          args: ["cassandra", "operator"]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
